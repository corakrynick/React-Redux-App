{"ast":null,"code":"var _jsxFileName = \"/Users/corakrynick/Desktop/LambdaWeb33/Unit3/React-Redux-App/app/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { reducer } from \"./store/reducers\";\nimport App from \"./App\"; // implementation of redux-thunk\n\nconst ownThunk = store => next => action => {\n  if (typeof action === \"object\") {\n    next(action);\n  } else if (typeof action === \"function\") {\n    // this means we're trying to do some asychronous operation\n    // DON\"T CALL NEXT!!!!\n    action(store.dispatch);\n  }\n}; // add applyMiddleware to add middleware to our app\n\n\nconst store = createStore(reducer, applyMiddleware(thunk));\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }\n})), rootElement);","map":{"version":3,"sources":["/Users/corakrynick/Desktop/LambdaWeb33/Unit3/React-Redux-App/app/src/index.js"],"names":["React","ReactDOM","createStore","applyMiddleware","Provider","thunk","reducer","App","ownThunk","store","next","action","dispatch","rootElement","document","getElementById","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAOC,GAAP,MAAgB,OAAhB,C,CAEA;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAYC,IAAD,IAAWC,MAAD,IAAY;AAChD,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC9BD,IAAAA,IAAI,CAACC,MAAD,CAAJ;AACD,GAFD,MAEO,IAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AACvC;AACA;AACAA,IAAAA,MAAM,CAACF,KAAK,CAACG,QAAP,CAAN;AACD;AACF,CARD,C,CAUA;;;AACA,MAAMH,KAAK,GAAGP,WAAW,CAACI,OAAD,EAAUH,eAAe,CAACE,KAAD,CAAzB,CAAzB;AAEA,MAAMQ,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAd,QAAQ,CAACe,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEP,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEI,WAJF","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport { reducer } from \"./store/reducers\";\n\nimport App from \"./App\";\n\n// implementation of redux-thunk\nconst ownThunk = (store) => (next) => (action) => {\n  if (typeof action === \"object\") {\n    next(action);\n  } else if (typeof action === \"function\") {\n    // this means we're trying to do some asychronous operation\n    // DON\"T CALL NEXT!!!!\n    action(store.dispatch);\n  }\n};\n\n// add applyMiddleware to add middleware to our app\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n"]},"metadata":{},"sourceType":"module"}